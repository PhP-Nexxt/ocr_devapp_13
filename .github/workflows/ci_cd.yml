name: ci-cd 

on:
  push:

env:
  DOCKER_USER: ${{ secrets.DOCKER_USER }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  DOCKER_REGISTRY: ${{ secrets.DOCKER_REGISTRY }}
  WEB_IMAGE: ${{ secrets.WEB_IMAGE }}
  NGINX_IMAGE: ${{ secrets.NGINX_IMAGE }}

jobs:
  linting: # quality code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - run: pip install flake8
      - run: pip install setuptools>=65.5.1 wheel>=0.38.1
      - run: pip install -r requirements.txt
      - run: flake8 .
  
  test-coverage: #Test and coverage (min 80%)
    runs-on: ubuntu-latest
    needs: linting
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - run: pip install setuptools>=65.5.1 wheel>=0.38.1
      - run: pip install -r requirements.txt
      - run: pip install coverage
      - name: coverage test and report
        run: |
            coverage erase
            coverage run manage.py test
            coverage report

  build-and-push: # build docker image and push docker hub
    runs-on: ubuntu-latest
    needs: test-coverage
    steps:
      - uses: actions/checkout@v3 # Start from
      - name: login to dockerhub
        run: |
            docker login -u $DOCKER_USER -p $DOCKER_PASSWORD $DOCKER_REGISTRY
      - name: pull web and nginx image from docker hub # Get last image(s)
        # || = or (avoid crash but goahead)
        run: |
            docker pull $WEB_IMAGE || true 
            docker pull $NGINX_IMAGE || true
      - name: build docker image
        run: docker-compose -f docker-compose.ci.yml build
      - name:
        run: |
            docker push $WEB_IMAGE 
            docker push $NGINX_IMAGE
            
  before-deploy:
    name: before deploy
    runs-on: ubuntu-latest
    needs: build-and-push
    steps: 
      - uses: actions/checkout@v3 # Start from (must be here)
      - name: copy file
        uses: appleboy/scp-action@v0.1.4 #ServerCopiePast-Action
        with: 
          host: ${{secrets.DEPLOY_PUBLIC_IP_ADDRESS}}
          username: ${{secrets.SERVER_USER}}
          key: ${{secrets.PRIVATE_KEY}}
          port: 22 #Defaul port Ssh
          source: "./nginx, ./docker-compose.prod.yml"
          target: "/home/${{secrets.SERVER_USER}}/project/" #$=get environnement variable

  deploy:
    name: deploy
    runs-on: ubuntu-latest
    needs: before-deploy
    steps:
      - uses: actions/checkout@v3 # Start from
      - name: login to dockerhub
        run: |
            docker login -u $DOCKER_USER -p $DOCKER_PASSWORD $DOCKER_REGISTRY
      - name: deploy using ssh
        uses: appleboy/ssh-action@master
        with: 
          host: ${{secrets.DEPLOY_PUBLIC_IP_ADDRESS}}
          username: ${{secrets.SERVER_USER}}
          key: ${{secrets.PRIVATE_KEY}}
          port: 22 #Defaul port Ssh
          script: | # Position in file project on server/down/clean/importdockerimage/up
              cd /home/${{secrets.SERVER_USER}}/project/
              docker-compose -f docker-compose.prod.yml down || true
              docker rm -vf $(docker ps -aq) || true
              docker rmi -f $(docker images -aq) || true
              docker pull $WEB_IMAGE
              docker pull $NGINX_IMAGE
              docker-compose -f docker-compose.prod.yml up -d






